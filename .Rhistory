library(rpart)
library(randomForest)
library(xgboost)
library(xgboostExplainer)
library(ggmosaic)
library(e1071)
library(ranger)
library(penalized)
library(rpart.plot)
library(ggcorrplot)
library(caTools)
library(doMC)
library(partykit)
library(rattle)
library(jpeg)
library(png)
library(ggExtra)
library(cluster)
library(NbClust)
library(flexclust)
library(fMultivar)
library(rattle)
registerDoMC(cores=4)
position <- readRDS("/monash-return-impact/data/position.rds")
pivit <- position %>% pivot_longer(AdT:DeuceWide,
names_to = "Servetype",
values_to = "values")
posit <- pivit %>%
dplyr::filter(values == 1)  %>%
dplyr::select(-values)
Khachanov <- posit %>%
dplyr::filter(player == "K. Khachanov") %>%
dplyr::select(X, Y, surface)
# , Ad, Clay, Grass, ServeType
my_image <- readJPEG("image/Tennis-Co.jpg")
g <- rasterGrob(my_image, width=unit(1,"npc"), height=unit(1,"npc"), interpolate = FALSE)
ggplot(Khachanov,
aes(x=X, y=Y)) +
annotation_custom(g, xmin= min(Khachanov$X),
xmax=max(Khachanov$X),
ymin=-Inf, ymax=Inf) +
geom_point() +
xlim(0, -23.8)
fit <- dist(Khachanov)
fit.average <- hclust(fit, method = "average")
plot(fit.average, hang =-1, cex=.8, main = "Average Linkage Clustering")
View(Khachanov)
clust <- cutree(Khachanov, 3)
clust <- cutree(Khachanov, 2)
Khachanov <- posit %>%
dplyr::filter(player == "K. Khachanov")
nc <- NbClust(Khachanov, min.nc = 2, max.nc = 15, method = "kmeans")
View(Khachanov)
Khachanov <- posit %>%
dplyr::filter(player == "K. Khachanov") %>%
dplyr::select(X, Y, serve, Ad, Clay, Grass, ServeType)
set.seed(1234)
devAskNewPage(ask = TRUE)
nc <- NbClust(Khachanov, min.nc = 2, max.nc = 15, method = "kmeans")
Khachanov <- posit %>%
dplyr::filter(player == "K. Khachanov") %>%
dplyr::select(X, Y, serve)
set.seed(1234)
devAskNewPage(ask = TRUE)
nc <- NbClust(Khachanov, min.nc = 2, max.nc = 15, method = "kmeans")
table(nc$Best.n[1,])
barplot(table(nc$Best.n[1,]),
xlab = "Number of Clusters", ylab = "Numbr of Criteria",
main = "Number of Clusters")
View(Khachanov)
fit <- kmeans(Khachanov)
fit <- mixmodCluster(Khachanov)
fit <- mixmodCluster(Khachanov)
knitr::opts_chunk$set(
echo =TRUE,
message = FALSE,
warning = FALSE,
cache = TRUE,
fig.align = "center")
library(tidyverse)
library(pacman)
library(rio)
library(skimr)
library(broom)
library(magrittr)
library(ROCR)
library(MASS)
library(caTools)
library(DMwR)
library(caret)
library(ggplot2)
library(patchwork)
library(vcd)
library(gridExtra)
library(knitr)
library(corrplot)
library(scales)
library(lme4)
library(DMwR)
library(InformationValue)
library(ROCR)
library(rpart)
library(randomForest)
library(xgboost)
library(xgboostExplainer)
library(ggmosaic)
library(e1071)
library(ranger)
library(penalized)
library(rpart.plot)
library(ggcorrplot)
library(caTools)
library(doMC)
library(partykit)
library(rattle)
library(jpeg)
library(png)
library(ggExtra)
library(cluster)
library(NbClust)
library(flexclust)
library(fMultivar)
library(rattle)
registerDoMC(cores=4)
fit <- mixmodCluster(Khachanov)
library(Rmixmod)
fit <- mixmodCluster(Khachanov)
View(Khachanov)
knitr::opts_chunk$set(
echo =TRUE,
message = FALSE,
warning = FALSE,
cache = TRUE,
fig.align = "center")
library(tidyverse)
library(pacman)
library(rio)
library(skimr)
library(broom)
library(magrittr)
library(ROCR)
library(MASS)
library(caTools)
library(DMwR)
library(caret)
library(ggplot2)
library(patchwork)
library(vcd)
library(gridExtra)
library(knitr)
library(corrplot)
library(scales)
library(lme4)
library(DMwR)
library(InformationValue)
library(ROCR)
library(rpart)
library(randomForest)
library(xgboost)
library(xgboostExplainer)
library(ggmosaic)
library(e1071)
library(ranger)
library(penalized)
library(rpart.plot)
library(ggcorrplot)
library(caTools)
library(doMC)
library(partykit)
library(rattle)
library(jpeg)
library(png)
library(ggExtra)
library(cluster)
library(NbClust)
library(flexclust)
library(fMultivar)
library(rattle)
library(Rmixmod)
registerDoMC(cores=4)
model <- mixmodCluster(positions[,c("X","Y")], 5)
positions <- readRDS("/monash-return-impact/data/position.rds")
model <- mixmodCluster(positions[,c("X","Y")], 5)
model
summary(model)
plot(model)
model <- mixmodCluster(positions[,c("X","Y")], 8)
model
summary(model)
plot(model)
model2 <- mixmodCluster(positions[,c("X","Y")], 2)
model2
plot(model2)
model3 <- mixmodCluster(positions[,c("X","Y")], 3)
model3
plot(model3)
model4 <- mixmodCluster(positions[,c("X","Y")], 4)
model4
plot(model4)
model5 <- mixmodCluster(positions[,c("X","Y")], 5
)
model5
plot(model5)
icl <- sortByCriterion(model5, "ICL")
icl <- sortByCriterion(model5, "BIC")
icl <- sortByCriterion(model, "BIC")
icl <- sortByCriterion(model, "icl")
model["result"]
model["results"]
xem <- mixmodCluster(positions, 5, strategy = mixmodStrategy(seed = 2000))
barplot(model)
predictio <- mixmodPredict(positions, classficationRule = learn["bestResult"])
knitr::opts_chunk$set(
echo =TRUE,
message = FALSE,
warning = FALSE,
cache = TRUE,
fig.align = "center")
library(tidyverse)
library(pacman)
library(rio)
library(skimr)
library(broom)
library(magrittr)
library(ROCR)
library(MASS)
library(caTools)
library(DMwR)
library(caret)
library(ggplot2)
library(patchwork)
library(vcd)
library(gridExtra)
library(knitr)
library(corrplot)
library(scales)
library(lme4)
library(DMwR)
library(InformationValue)
library(ROCR)
library(rpart)
library(randomForest)
library(xgboost)
library(xgboostExplainer)
library(ggmosaic)
library(e1071)
library(ranger)
library(penalized)
library(rpart.plot)
library(ggcorrplot)
library(caTools)
library(doMC)
library(partykit)
library(rattle)
library(jpeg)
library(png)
library(ggExtra)
library(cluster)
library(NbClust)
library(flexclust)
library(fMultivar)
library(rattle)
library(Rmixmod)
registerDoMC(cores=4)
positions <- readRDS("/monash-return-impact/data/position.rds")
pivit <- position %>% pivot_longer(AdT:DeuceWide,
names_to = "Servetype",
values_to = "values")
posit <- pivit %>%
dplyr::filter(values == 1)  %>%
dplyr::select(-values)
summarydata <- summary(position)
summarydata
Khachanov <- posit %>%
dplyr::filter(player == "K. Khachanov") %>%
dplyr::select(X, Y, Ad, Clay, Grass)
p1 <- ggMarginal(p, type="histogram")
fit <- mixmodCluster(Khachanov,
nbCluster = 2:8,
criterion = c("BIC", "ICL", "NEC"),
models = mixmodGaussianModel(),
strategy = strategy1)
model <- mixmodCluster(positions[,c("X","Y")], 8)
model
model["bestBesult"]
model["bestResult"]
model["Result"]
model["results"]
model2["bestResult"]
model3["bestResult"]
model4["bestResult"]
model5["bestResult"]
model5["results"]
mixmodLearn(model)
kmod <- mixmodCluster(Khachanov[,c("X","Y")], 5 )
kmod
kmod <- mixmodCluster(Khachanov[,c("X","Y")], 5)
kmod
plot(kmod)
output$distPlot <- renderPlot({
position %>% filter(player == input$player)
mixmodCluster(position[,c("X","Y")], 5) %>%
plot()
})
shiny::runApp('modelapp/app')
library(Rmixmod)
runApp('modelapp/app')
runApp('modelapp/app')
positions <- readRDS("data/position.rds")
runApp('modelapp/app')
kmod <- mixmodCluster(Khachanov[,c("X","Y")], 5) %>%
plot()
kmod <- Khachanov%>%mixmodCluster([,c("X","Y")], 5) %>%
runApp('modelapp/app')
runApp('modelapp/app')
runApp('modelapp')
kmod <- mixmodCluster( position %>% filter(player == "Khachanov")[,c("X","Y")], 5) %>%
plot()
kmod <- mixmodCluster( positions %>% filter(player == "Khachanov")[,c("X","Y")], 5) %>%
plot()
runApp('modelapp')
summary(model)
modelicl <- sortByCriterion(model, "ICL")
View(positions)
Djokovic <- positions %>%
dplyr::filter(player == "N. Djokovic")
View(posit)
Djokovic <- positions %>%
dplyr::filter(player == "N. Djokovic")
Thiem <- positions %>%
dplyr::filter(player == "D. Thiem")
learn <- mixmodLearn(Djokovic, Thiem, nbCVBlocks = nrow(positions))
D <- subset(positions, player =="N. Djokovic")
D <- subset(positions, player =="N. Djokovic")
T <- subset(positions, player =="D. Thiem")
learn <- mixmodLearn(Djokovic, Thiem, nbCVBlocks = nrow(positions))
ï¼Ÿprcomp
?prcomp
prcomp
knitr::opts_chunk$set(
echo =TRUE,
message = FALSE,
warning = FALSE,
cache = TRUE,
fig.align = "center")
library(tidyverse)
library(pacman)
library(rio)
library(skimr)
library(broom)
library(magrittr)
library(ROCR)
library(MASS)
library(caTools)
library(DMwR)
library(caret)
library(ggplot2)
library(patchwork)
library(vcd)
library(gridExtra)
library(knitr)
library(corrplot)
library(scales)
library(lme4)
library(DMwR)
library(InformationValue)
library(ROCR)
library(rpart)
library(randomForest)
library(xgboost)
library(xgboostExplainer)
library(ggmosaic)
library(e1071)
library(ranger)
library(penalized)
library(rpart.plot)
library(ggcorrplot)
library(caTools)
library(doMC)
library(partykit)
library(rattle)
library(jpeg)
library(png)
library(ggExtra)
library(cluster)
library(NbClust)
library(flexclust)
library(fMultivar)
library(rattle)
library(Rmixmod)
registerDoMC(cores=4)
positions <- readRDS("/monash-return-impact/data/position.rds")
pivit <- position %>% pivot_longer(AdT:DeuceWide,
names_to = "Servetype",
values_to = "values")
summarydata <- summary(positions)
summarydata
p1 <- ggMarginal(p, type="histogram")
knitr::opts_chunk$set(
echo =TRUE,
message = FALSE,
warning = FALSE,
cache = TRUE,
fig.align = "center")
library(tidyverse)
library(pacman)
library(rio)
library(skimr)
library(broom)
library(magrittr)
library(ROCR)
library(MASS)
library(caTools)
library(DMwR)
library(caret)
library(ggplot2)
library(patchwork)
library(vcd)
library(gridExtra)
library(knitr)
library(corrplot)
library(scales)
library(lme4)
library(DMwR)
library(InformationValue)
library(ROCR)
library(rpart)
library(randomForest)
library(xgboost)
library(xgboostExplainer)
library(ggmosaic)
library(e1071)
library(ranger)
library(penalized)
library(rpart.plot)
library(ggcorrplot)
library(caTools)
library(doMC)
library(partykit)
library(rattle)
library(jpeg)
library(png)
library(ggExtra)
library(cluster)
library(NbClust)
library(flexclust)
library(fMultivar)
library(rattle)
library(Rmixmod)
registerDoMC(cores=4)
positions <- readRDS("/monash-return-impact/data/position.rds")
pivit <- position %>% pivot_longer(AdT:DeuceWide,
names_to = "Servetype",
values_to = "values")
summarydata <- summary(position)
Khachanov <- posit %>%
dplyr::filter(player == "K. Khachanov") %>%
dplyr::select(X, Y, Ad, Clay, Grass)
p1 <- ggMarginal(p, type="histogram")
model <- mixmodCluster(positions[,c("X","Y")], 5)
model
fit <- mixmodCluster(Khachanov,
nbCluster = 2:8,
criterion = c("BIC", "ICL", "NEC"),
models = mixmodGaussianModel(),
strategy = strategy1)
kmod <- mixmodCluster( positions %>% filter(player == "Khachanov")[,c("X","Y")], 5) %>%
plot()
plot(kmod)
model <- mixmodCluster(positions[,c("X","Y")], 8)
View(positions)
player <- positions %>%
filter(player %in% c("N. Djokovic", "R. Federer", "D. Thiem", "A. Zverev", "D. Schwartzman", "R. Nadal", "D. Medvedev", "S. Tsitsipas", "A. Rublev", "M. Berrettini", "R. Bautista Agut", "P. Carreno Busta"))
View(positions)
player <- positions %>%
dplyr::filter(player %in% c("N. Djokovic", "R. Federer", "D. Thiem", "A. Zverev", "D. Schwartzman", "R. Nadal", "D. Medvedev", "S. Tsitsipas", "A. Rublev", "M. Berrettini", "R. Bautista Agut", "P. Carreno Busta"))
View(player)
player <- positions %>%
dplyr::filter(player %in% c("N. Djokovic", "R. Federer", "D. Thiem", "A. Zverev", "D. Schwartzman", "R. Nadal", "D. Medvedev", "S. Tsitsipas", "A. Rublev", "M. Berrettini", "R. Bautista Agut", "P. Carreno Busta") |
opponent %in% c("N. Djokovic", "R. Federer", "D. Thiem", "A. Zverev", "D. Schwartzman", "R. Nadal", "D. Medvedev", "S. Tsitsipas", "A. Rublev", "M. Berrettini", "R. Bautista Agut", "P. Carreno Busta")
)
View(player)
top <- mixmodCluster(player[,c("X","Y")], 5)
plot(top)
summary(top)
icl <- sortByCriterion(top, "ICL")
icl <- sortByCriterion(top, "BIC")
icl <- sortByCriterion(top)
top["results"]
serveone <- player %>%
dplyr::filter(serve ==1)
servetwo <- player %>%
dplyr::filter(serve == 2)
serveone <- player %>%
dplyr::filter(serve ==1)
serveonemix <- mixmodCluster(serveone[,c("X","Y")], 5)
summary(serveonemix)
plot(serveonemix)
servetwo <- player %>%
dplyr::filter(serve == 2)
servetwomix <- mixmodCluster(servetwo[,c("X","Y")], 5)
summary(servetwomix)
plot(servetwomix)
summary(servetwomix)
serveonemix["result"]
serveone <- player %>%
dplyr::filter(serve ==1)
serveonemix <- mixmodCluster(serveone[,c("X","Y")], 5)
summary(serveonemix)
plot(serveonemix)
serveonemix["results"]
servetwomix["results"]
